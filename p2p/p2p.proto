syntax = "proto3";

package p2p;

option go_package = "p2ppb";
option java_multiple_files = true;
option java_outer_classname = "P2pProto";
option java_package = "com.p2p";

import "coredocument/coredocument.proto";

message CentrifugeHeader {
  uint32 network_identifier = 1;
  string cent_node_version = 2;
  bytes sender_centrifuge_id = 3;
  // Signature of all fields of CentrifugeHeader (except itself) + body
  coredocument.Signature signature = 4;
  // Body message type
  string type = 5;
}

message CentrifugeEnvelope {
  CentrifugeHeader header = 1;
  bytes body = 2;
}

message SignatureRequest {
  coredocument.CoreDocument document = 1;
}

message SignatureResponse {
  coredocument.Signature signature = 1;
}

message AnchorDocumentRequest {
  coredocument.CoreDocument document = 1;
}

message AnchorDocumentResponse {
  bool accepted = 1;
}

// P2PService implementas all rpcs that can be called inside of the P2P network
service P2PService {
  // after the pre-commit the sender asks all participants to sign the new document version
  rpc RequestDocumentSignature(SignatureRequest) returns (SignatureResponse);
  //after all signatures are collected the sender sends the document including the signatures
  rpc SendAnchoredDocument(AnchorDocumentRequest) returns (AnchorDocumentResponse);
}
