syntax = "proto3";

package purchaseorder;

option go_package = "purchaseorderpb";
option java_multiple_files = true;
option java_outer_classname = "PurchaseorderProto";
option java_package = "com.purchaseorder";

import "common/document_common.proto";
import "google/protobuf/timestamp.proto";
import "precise-proofs/proofs/proto/proof.proto";

// PurchaseOrderData is the default schema for a purchase order
message PurchaseOrderData {
  // purchase order status
  string status = 1 [(proofs.field_length) = 32];
  // purchase order number or reference number
  string number = 2;
  string sender_order_id = 3;
  string recipient_order_id = 4;
  string requisition_id = 5;
  string requester_name = 6;
  string requester_email = 7;
  string ship_to_company_name = 8;
  string ship_to_contact_person_name = 9;
  string ship_to_street1 = 10;
  string ship_to_street2 = 11;
  string ship_to_city = 12;
  string ship_to_zipcode = 13;
  string ship_to_state = 14;
  string ship_to_country = 15;
  string payment_terms = 16;
  string currency = 17;
  // A centrifuge decimal number which is a 256bit(32 byte) integer and assume a precision of 18 behind the decimal point.
  // eg: 38447.3214 would be represented as 38447321400000000000000
  bytes total_amount = 18 [(proofs.field_length) = 32];
  // centrifuge ID of the recipient
  bytes recipient = 19 [(proofs.field_length) = 20];
  // centrifuge ID of the sender
  bytes sender = 20 [(proofs.field_length) = 20];
  string comment = 21;
  google.protobuf.Timestamp date_sent = 22;
  google.protobuf.Timestamp date_confirmed = 23;
  google.protobuf.Timestamp date_updated = 24;
  google.protobuf.Timestamp date_created = 25;
  repeated common.BinaryAttachment attachments = 26;
  repeated LineItem line_items = 27;
  repeated common.PaymentDetails payment_details = 28;
}

message LineItem {
  string status = 1;
  string item_number = 2;
  string description = 3;
  // A centrifuge decimal number which is a 256bit(32 byte) integer and assume a precision of 18 behind the decimal point.
  // eg: 38447.3214 would be represented as 38447321400000000000000
  bytes amount_invoiced = 4 [(proofs.field_length) = 32];
  // A centrifuge decimal number which is a 256bit(32 byte) integer and assume a precision of 18 behind the decimal point.
  // eg: 38447.3214 would be represented as 38447321400000000000000
  bytes amount_total = 5 [(proofs.field_length) = 32];
  string requisition_number = 6;
  string requisition_item = 7;
  string part_no = 8;
  // A centrifuge decimal number which is a 256bit(32 byte) integer and assume a precision of 18 behind the decimal point.
  // eg: 38447.3214 would be represented as 38447321400000000000000
  bytes price_per_unit = 9 [(proofs.field_length) = 32];
  // A centrifuge decimal number which is a 256bit(32 byte) integer and assume a precision of 18 behind the decimal point.
  // eg: 38447.3214 would be represented as 38447321400000000000000
  bytes unit_of_measure = 10 [(proofs.field_length) = 32];
  // A centrifuge decimal number which is a 256bit(32 byte) integer and assume a precision of 18 behind the decimal point.
  // eg: 38447.3214 would be represented as 38447321400000000000000
  bytes quantity = 11 [(proofs.field_length) = 32];
  // A centrifuge decimal number which is a 256bit(32 byte) integer and assume a precision of 18 behind the decimal point.
  // eg: 38447.3214 would be represented as 38447321400000000000000
  bytes received_quantity = 12 [(proofs.field_length) = 32];
  google.protobuf.Timestamp date_updated = 13;
  google.protobuf.Timestamp date_created = 14;
  int64 revision_number = 15;
  repeated LineItemActivity activities = 16;
  repeated TaxItem tax_items = 17;
}

message TaxItem {
  string item_number = 1;
  string purchase_order_item_number = 2;
  // A centrifuge decimal number which is a 256bit(32 byte) integer and assume a precision of 18 behind the decimal point.
  // eg: 38447.3214 would be represented as 38447321400000000000000
  bytes tax_amount = 3 [(proofs.field_length) = 32];
  // A centrifuge decimal number which is a 256bit(32 byte) integer and assume a precision of 18 behind the decimal point.
  // eg: 38447.3214 would be represented as 38447321400000000000000
  bytes tax_rate = 4 [(proofs.field_length) = 32];
  // A centrifuge decimal number which is a 256bit(32 byte) integer and assume a precision of 18 behind the decimal point.
  // eg: 38447.3214 would be represented as 38447321400000000000000
  bytes tax_code = 5 [(proofs.field_length) = 32];
  // A centrifuge decimal number which is a 256bit(32 byte) integer and assume a precision of 18 behind the decimal point.
  // eg: 38447.3214 would be represented as 38447321400000000000000
  bytes tax_base_amount = 6 [(proofs.field_length) = 32];
}

message LineItemActivity {
  string item_number = 1;
  //delivered, returned, credited, invoiced, paid, ...
  string status = 2;
  // A centrifuge decimal number which is a 256bit(32 byte) integer and assume a precision of 18 behind the decimal point.
  // eg: 38447.3214 would be represented as 38447321400000000000000
  bytes quantity = 3 [(proofs.field_length) = 32];
  // A centrifuge decimal number which is a 256bit(32 byte) integer and assume a precision of 18 behind the decimal point.
  // eg: 38447.3214 would be represented as 38447321400000000000000
  bytes amount = 4 [(proofs.field_length) = 32];
  //depending on status delivery note, invoice, ...
  string reference_document_id = 5;
  //line item from the reference document
  string reference_document_item = 6;
  google.protobuf.Timestamp date = 7;
}
