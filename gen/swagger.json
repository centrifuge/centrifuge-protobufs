{"swagger":"2.0","info":{"version":"0.0.1","title":"Centrifuge OS Node API","description":"\n","contact":{"name":"Centrifuge","url":"https://github.com/CentrifugeInc/go-centrifuge","email":"hello@centrifuge.io"}},"host":"localhost","basePath":"","schemes":["https"],"consumes":["application/json"],"produces":["application/json"],"tags":[],"definitions":{"coredocumentCoreDocument":{"type":"object","properties":{"document_identifier":{"type":"string","format":"byte","description":"# Identifiers\nCoreDocument has two kinds of identifiers, the `document_identifier` is assigned \nonce per document and stays the same for the lifetime of the document.\ndocument_identifier is the first ID ever used to anchor the document on chain and \nis used internally to store all future versions. The `current_identifier` and the \n`next_identifier` refer only to this particular version.\n\n32 byte value"},"current_identifier":{"type":"string","format":"byte","description":"current_identifier is the identifier used to refer to the current state of the document.\n\n32 byte value"},"next_identifier":{"type":"string","format":"byte","description":"next_identifier is the identifier that is going to be used for the next version if any \nparty wants to update the state."},"document_root":{"type":"string","format":"byte","title":"# Merkle roots\ndocument_root the root of all roots. It's signature_root along with a list of all signatures"},"signing_root":{"type":"string","format":"byte","description":"signing_root is the Merkle root calculated from all fields on the document that need \nto be signed. This is all fields except for the signatures themselves and the `document_root`."},"previous_root":{"type":"string","format":"byte","title":"previous_root is the `document_root` of the previous version of the document"},"data_root":{"type":"string","format":"byte","description":"data_root is the Merkle root calculated for the `embedded_data` & `embedded_salts` document (such as an invoice)."},"signatures":{"type":"array","items":{"$ref":"#/definitions/coredocumentSignature"},"description":"Signatures\nSignatures of the signature_root by centrifuge identities. This array should be sorted by the Centrifuge ID."},"embedded_data":{"$ref":"#/definitions/protobufAny","title":"Document a serialized document"},"embedded_data_salts":{"$ref":"#/definitions/protobufAny"}},"description":"* Merkle Roots for the document data\n* Signatures on document data\n* Access Control","title":"`CoreDocument` is a document that can be sent to different nodes and anchored \non chain. It handles all the generic features native Centrifuge Documents support:"},"coredocumentSignature":{"type":"object","properties":{"entity_id":{"type":"string","format":"byte","description":"`entity_id` is the CentrifugeID of the entity signing the document."},"public_key":{"type":"string","format":"byte","title":"`public_key` is the public key of the `entity` used for signing the `CoreDocument`"},"signature":{"type":"string","format":"byte"}},"title":"Signature contains the entity ID, public key used and signature)"},"invoiceAnchorInvoiceEnvelope":{"type":"object","properties":{"document":{"$ref":"#/definitions/invoiceInvoiceDocument"}}},"invoiceCreateInvoiceProofEnvelope":{"type":"object","properties":{"document_identifier":{"type":"string","format":"byte"},"fields":{"type":"array","items":{"type":"string"}}}},"invoiceInvoiceData":{"type":"object","properties":{"invoice_number":{"type":"string","title":"invoice number or reference number"},"sender_name":{"type":"string","title":"name of the sender company"},"sender_street":{"type":"string","title":"street and address details of the sender company"},"sender_city":{"type":"string"},"sender_zipcode":{"type":"string"},"sender_country":{"type":"string","title":"country ISO code of the sender of this invoice"},"recipient_name":{"type":"string","title":"name of the recipient company"},"recipient_street":{"type":"string"},"recipient_city":{"type":"string"},"recipient_zipcode":{"type":"string"},"recipient_country":{"type":"string","title":"country ISO code of the receipient of this invoice"},"currency":{"type":"string","title":"ISO currency code"},"gross_amount":{"type":"string","format":"int64","title":"invoice amount including tax"},"net_amount":{"type":"string","format":"int64","title":"invoice amount excluding tax"},"tax_amount":{"type":"string","format":"int64"},"tax_rate":{"type":"string","format":"int64"},"recipient":{"type":"string","format":"byte"},"sender":{"type":"string","format":"byte"},"payee":{"type":"string","format":"byte"},"comment":{"type":"string"},"due_date":{"type":"string","format":"date-time"},"date_created":{"type":"string","format":"date-time"},"extra_data":{"type":"string","format":"byte"}},"title":"InvoiceData is the default invoice schema"},"invoiceInvoiceDataSalts":{"type":"object","properties":{"invoice_number":{"type":"string","format":"byte"},"sender_name":{"type":"string","format":"byte"},"sender_street":{"type":"string","format":"byte"},"sender_city":{"type":"string","format":"byte"},"sender_zipcode":{"type":"string","format":"byte"},"sender_country":{"type":"string","format":"byte"},"recipient_name":{"type":"string","format":"byte"},"recipient_street":{"type":"string","format":"byte"},"recipient_city":{"type":"string","format":"byte"},"recipient_zipcode":{"type":"string","format":"byte"},"recipient_country":{"type":"string","format":"byte"},"currency":{"type":"string","format":"byte"},"gross_amount":{"type":"string","format":"byte"},"net_amount":{"type":"string","format":"byte"},"tax_amount":{"type":"string","format":"byte"},"tax_rate":{"type":"string","format":"byte"},"recipient":{"type":"string","format":"byte"},"sender":{"type":"string","format":"byte"},"payee":{"type":"string","format":"byte"},"comment":{"type":"string","format":"byte"},"due_date":{"type":"string","format":"byte"},"date_created":{"type":"string","format":"byte"},"extra_data":{"type":"string","format":"byte"}},"description":"InvoiceDataSalts keeps track of the salts used for each InvoiceData field."},"invoiceInvoiceDocument":{"type":"object","properties":{"core_document":{"$ref":"#/definitions/coredocumentCoreDocument"},"data":{"$ref":"#/definitions/invoiceInvoiceData"},"salts":{"$ref":"#/definitions/invoiceInvoiceDataSalts"}},"title":"InvoiceDocument combines teh salts, data & coredocument for an invoice"},"invoiceInvoiceProof":{"type":"object","properties":{"document_identifier":{"type":"string","format":"byte"},"field_proofs":{"type":"array","items":{"$ref":"#/definitions/proofsProof"}}}},"invoiceReceivedInvoices":{"type":"object","properties":{"invoices":{"type":"array","items":{"$ref":"#/definitions/invoiceInvoiceDocument"}}}},"invoiceSendInvoiceEnvelope":{"type":"object","properties":{"recipients":{"type":"array","items":{"type":"string","format":"byte"},"title":"Centrifuge OS Entity of the recipient"},"document":{"$ref":"#/definitions/invoiceInvoiceDocument"}}},"proofsMerkleHash":{"type":"object","properties":{"left":{"type":"string","format":"byte"},"right":{"type":"string","format":"byte"}}},"proofsProof":{"type":"object","properties":{"property":{"type":"string"},"value":{"type":"string"},"salt":{"type":"string","format":"byte"},"hashes":{"type":"array","items":{"$ref":"#/definitions/proofsMerkleHash"}}}},"protobufAny":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name whose content describes the type of the\nserialized protocol buffer message.\n\nFor URLs which use the scheme `http`, `https`, or no scheme, the\nfollowing restrictions and interpretations apply:\n\n* If no scheme is provided, `https` is assumed.\n* The last segment of the URL's path must represent the fully\n  qualified name of the type (as in `path/google.protobuf.Duration`).\n  The name should be in a canonical form (e.g., leading \".\" is\n  not accepted).\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"},"p2pP2PReply":{"type":"object","properties":{"cent_node_version":{"type":"string"},"document":{"$ref":"#/definitions/coredocumentCoreDocument"}}},"purchaseorderAnchorPurchaseOrderEnvelope":{"type":"object","properties":{"document":{"$ref":"#/definitions/purchaseorderPurchaseOrderDocument"}}},"purchaseorderCreatePurchaseOrderProofEnvelope":{"type":"object","properties":{"document_identifier":{"type":"string","format":"byte"},"fields":{"type":"array","items":{"type":"string"}}}},"purchaseorderPurchaseOrderData":{"type":"object","properties":{"po_number":{"type":"string","title":"purchase order number or reference number"},"order_name":{"type":"string","title":"name of the ordering company"},"order_street":{"type":"string","title":"street and address details of the ordering company"},"order_city":{"type":"string"},"order_zipcode":{"type":"string"},"order_country":{"type":"string","title":"country ISO code of the ordering company of this purchase order"},"recipient_name":{"type":"string","title":"name of the recipient company"},"recipient_street":{"type":"string"},"recipient_city":{"type":"string"},"recipient_zipcode":{"type":"string"},"recipient_country":{"type":"string","title":"country ISO code of the receipient of this purchase order"},"currency":{"type":"string","title":"ISO currency code"},"order_amount":{"type":"string","format":"int64","title":"ordering gross amount including tax"},"net_amount":{"type":"string","format":"int64","title":"invoice amount excluding tax"},"tax_amount":{"type":"string","format":"int64"},"tax_rate":{"type":"string","format":"int64"},"recipient":{"type":"string","format":"byte"},"order":{"type":"string","format":"byte"},"order_contact":{"type":"string","title":"contact or requester or purchaser at the ordering company"},"comment":{"type":"string"},"delivery_date":{"type":"string","format":"date-time","title":"requested delivery date"},"date_created":{"type":"string","format":"date-time","title":"purchase order date"},"extra_data":{"type":"string","format":"byte"}},"title":"PurchaseOrderData is the default schema for a purchase order"},"purchaseorderPurchaseOrderDataSalts":{"type":"object","properties":{"po_number":{"type":"string","format":"byte"},"order_name":{"type":"string","format":"byte"},"order_street":{"type":"string","format":"byte"},"order_city":{"type":"string","format":"byte"},"order_zipcode":{"type":"string","format":"byte"},"order_country":{"type":"string","format":"byte"},"recipient_name":{"type":"string","format":"byte"},"recipient_street":{"type":"string","format":"byte"},"recipient_city":{"type":"string","format":"byte"},"recipient_zipcode":{"type":"string","format":"byte"},"recipient_country":{"type":"string","format":"byte"},"currency":{"type":"string","format":"byte"},"order_amount":{"type":"string","format":"byte"},"net_amount":{"type":"string","format":"byte"},"tax_amount":{"type":"string","format":"byte"},"tax_rate":{"type":"string","format":"byte"},"recipient":{"type":"string","format":"byte"},"order":{"type":"string","format":"byte"},"order_contact":{"type":"string","format":"byte"},"comment":{"type":"string","format":"byte"},"delivery_date":{"type":"string","format":"byte"},"date_created":{"type":"string","format":"byte"},"extra_data":{"type":"string","format":"byte"}},"description":"PurhcaseOrderDataSalts keeps track of the salts used for each PurchaseOrderData field."},"purchaseorderPurchaseOrderDocument":{"type":"object","properties":{"core_document":{"$ref":"#/definitions/coredocumentCoreDocument"},"data":{"$ref":"#/definitions/purchaseorderPurchaseOrderData"},"salts":{"$ref":"#/definitions/purchaseorderPurchaseOrderDataSalts"}},"description":"PurchaseOrderDocument combines the salts, data & coredocument for a purchase order."},"purchaseorderPurchaseOrderProof":{"type":"object","properties":{"document_identifier":{"type":"string","format":"byte"},"field_proofs":{"type":"array","items":{"$ref":"#/definitions/proofsProof"}}}},"purchaseorderReceivedPurchaseOrders":{"type":"object","properties":{"purchaseorders":{"type":"array","items":{"$ref":"#/definitions/purchaseorderPurchaseOrderDocument"}}}},"purchaseorderSendPurchaseOrderEnvelope":{"type":"object","properties":{"recipients":{"type":"array","items":{"type":"string","format":"byte"},"title":"Centrifuge OS Entity of the recipient"},"document":{"$ref":"#/definitions/purchaseorderPurchaseOrderDocument"}}}},"paths":{"/invoice/anchor":{"post":{"description":"Anchor an invoice document","operationId":"AnchorInvoiceDocument","responses":{"200":{"description":"","schema":{"$ref":"#/definitions/invoiceInvoiceDocument"}}},"parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/invoiceAnchorInvoiceEnvelope"}}],"tags":["InvoiceDocumentService"]}},"/invoice/getReceived":{"get":{"operationId":"GetReceivedInvoiceDocuments","responses":{"200":{"description":"","schema":{"$ref":"#/definitions/invoiceReceivedInvoices"}}},"tags":["InvoiceDocumentService"]}},"/invoice/send":{"post":{"description":"Send an invoice document to the specified party","operationId":"SendInvoiceDocument","responses":{"200":{"description":"","schema":{"$ref":"#/definitions/invoiceInvoiceDocument"}}},"parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/invoiceSendInvoiceEnvelope"}}],"tags":["InvoiceDocumentService"]}},"/invoice/{document_identifier}":{"get":{"operationId":"GetInvoiceDocument","responses":{"200":{"description":"","schema":{"$ref":"#/definitions/invoiceInvoiceDocument"}}},"parameters":[{"name":"document_identifier","in":"path","required":true,"type":"string","format":"byte"}],"tags":["InvoiceDocumentService"]}},"/invoice/{document_identifier}/proof":{"post":{"description":"Creates a list of precise proofs for the specified fields","operationId":"CreateInvoiceProof","responses":{"200":{"description":"","schema":{"$ref":"#/definitions/invoiceInvoiceProof"}}},"parameters":[{"name":"document_identifier","in":"path","required":true,"type":"string","format":"byte"},{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/invoiceCreateInvoiceProofEnvelope"}}],"tags":["InvoiceDocumentService"]}},"/purchaseorder/anchor":{"post":{"description":"Anchor a purchaseorder document","operationId":"AnchorPurchaseOrderDocument","responses":{"200":{"description":"","schema":{"$ref":"#/definitions/purchaseorderPurchaseOrderDocument"}}},"parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/purchaseorderAnchorPurchaseOrderEnvelope"}}],"tags":["PurchaseOrderDocumentService"]}},"/purchaseorder/getReceived":{"get":{"operationId":"GetReceivedPurchaseOrderDocuments","responses":{"200":{"description":"","schema":{"$ref":"#/definitions/purchaseorderReceivedPurchaseOrders"}}},"tags":["PurchaseOrderDocumentService"]}},"/purchaseorder/send":{"post":{"description":"Send a purchaseorder document to the specified party","operationId":"SendPurchaseOrderDocument","responses":{"200":{"description":"","schema":{"$ref":"#/definitions/purchaseorderPurchaseOrderDocument"}}},"parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/purchaseorderSendPurchaseOrderEnvelope"}}],"tags":["PurchaseOrderDocumentService"]}},"/purchaseorder/{document_identifier}":{"get":{"operationId":"GetPurchaseOrderDocument","responses":{"200":{"description":"","schema":{"$ref":"#/definitions/purchaseorderPurchaseOrderDocument"}}},"parameters":[{"name":"document_identifier","in":"path","required":true,"type":"string","format":"byte"}],"tags":["PurchaseOrderDocumentService"]}},"/purchaseorder/{document_identifier}/proof":{"post":{"description":"Creates a list of precise proofs for the specified fields","operationId":"CreatePurchaseOrderProof","responses":{"200":{"description":"","schema":{"$ref":"#/definitions/purchaseorderPurchaseOrderProof"}}},"parameters":[{"name":"document_identifier","in":"path","required":true,"type":"string","format":"byte"},{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/purchaseorderCreatePurchaseOrderProofEnvelope"}}],"tags":["PurchaseOrderDocumentService"]}}}}