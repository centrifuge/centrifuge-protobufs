{
  "swagger": "2.0",
  "info": {
    "title": "purchaseorder/service.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/purchaseorder/anchor": {
      "post": {
        "description": "Anchor a purchaseorder document",
        "operationId": "AnchorPurchaseOrderDocument",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/purchaseorderPurchaseOrderDocument"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/purchaseorderAnchorPurchaseOrderEnvelope"
            }
          }
        ],
        "tags": [
          "PurchaseOrderDocumentService"
        ]
      }
    },
    "/purchaseorder/getReceived": {
      "get": {
        "operationId": "GetReceivedPurchaseOrderDocuments",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/purchaseorderReceivedPurchaseOrders"
            }
          }
        },
        "tags": [
          "PurchaseOrderDocumentService"
        ]
      }
    },
    "/purchaseorder/send": {
      "post": {
        "description": "Send a purchaseorder document to the specified party",
        "operationId": "SendPurchaseOrderDocument",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/purchaseorderPurchaseOrderDocument"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/purchaseorderSendPurchaseOrderEnvelope"
            }
          }
        ],
        "tags": [
          "PurchaseOrderDocumentService"
        ]
      }
    },
    "/purchaseorder/{document_identifier}": {
      "get": {
        "operationId": "GetPurchaseOrderDocument",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/purchaseorderPurchaseOrderDocument"
            }
          }
        },
        "parameters": [
          {
            "name": "document_identifier",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "PurchaseOrderDocumentService"
        ]
      }
    },
    "/purchaseorder/{document_identifier}/proof": {
      "post": {
        "description": "Creates a list of precise proofs for the specified fields",
        "operationId": "CreatePurchaseOrderProof",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/purchaseorderPurchaseOrderProof"
            }
          }
        },
        "parameters": [
          {
            "name": "document_identifier",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/purchaseorderCreatePurchaseOrderProofEnvelope"
            }
          }
        ],
        "tags": [
          "PurchaseOrderDocumentService"
        ]
      }
    }
  },
  "definitions": {
    "coredocumentCoreDocument": {
      "type": "object",
      "properties": {
        "document_identifier": {
          "type": "string",
          "format": "byte",
          "description": "This is for convenience: the first identifier that was ever used to refer to a \ndocument is kept here. Internally the centrifuge node indexes \u0026 bundles documents \nby original identifier.\n\n32 byte value"
        },
        "current_identifier": {
          "type": "string",
          "format": "byte",
          "description": "The current identifier is the location of the current anchor on chain and is used to \nrefer to the current state.\n\n32 byte value"
        },
        "next_identifier": {
          "type": "string",
          "format": "byte",
          "description": "When creating the next version this should be used."
        },
        "previous_root": {
          "type": "string",
          "format": "byte",
          "title": "Root"
        },
        "data_merkle_root": {
          "type": "string",
          "format": "byte"
        },
        "document_root": {
          "type": "string",
          "format": "byte"
        },
        "signatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/coredocumentSignature"
          },
          "title": "Signatures"
        },
        "previous_versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/coredocumentCoreDocument"
          },
          "description": "This is a readonly field",
          "title": "The previous document is referenced here but doesn't need to be provided and can\nbe left blank"
        },
        "embedded_data": {
          "$ref": "#/definitions/protobufAny",
          "title": "Document a serialized document"
        },
        "embedded_data_salts": {
          "$ref": "#/definitions/protobufAny"
        }
      },
      "description": "* Merkle Roots for the document data\n* Signatures on document data\n* Access Control",
      "title": "`CoreDocument` is a document that can be sent to different nodes and anchored \non chain. It handles all the generic features native Centrifuge Documents support:"
    },
    "coredocumentSignature": {
      "type": "object",
      "properties": {
        "entity_id": {
          "type": "string",
          "format": "byte",
          "description": "`entity_id` is the CentrifugeID of the entity signing the document."
        },
        "public_key": {
          "type": "string",
          "format": "byte",
          "title": "`public_key` is the public key of the `entity` used for signing the `CoreDocument`"
        },
        "signature": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "Signature contains the entity ID, public key used and signature)"
    },
    "proofsMerkleHash": {
      "type": "object",
      "properties": {
        "left": {
          "type": "string",
          "format": "byte"
        },
        "right": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "proofsProof": {
      "type": "object",
      "properties": {
        "property": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "salt": {
          "type": "string",
          "format": "byte"
        },
        "hashes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/proofsMerkleHash"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name whose content describes the type of the\nserialized protocol buffer message.\n\nFor URLs which use the scheme `http`, `https`, or no scheme, the\nfollowing restrictions and interpretations apply:\n\n* If no scheme is provided, `https` is assumed.\n* The last segment of the URL's path must represent the fully\n  qualified name of the type (as in `path/google.protobuf.Duration`).\n  The name should be in a canonical form (e.g., leading \".\" is\n  not accepted).\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "purchaseorderAnchorPurchaseOrderEnvelope": {
      "type": "object",
      "properties": {
        "document": {
          "$ref": "#/definitions/purchaseorderPurchaseOrderDocument"
        }
      }
    },
    "purchaseorderCreatePurchaseOrderProofEnvelope": {
      "type": "object",
      "properties": {
        "document_identifier": {
          "type": "string",
          "format": "byte"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "purchaseorderPurchaseOrderData": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "int64"
        },
        "recipient": {
          "type": "string",
          "format": "byte"
        },
        "sender": {
          "type": "string",
          "format": "byte"
        },
        "comment": {
          "type": "string"
        },
        "delivery_date": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "PurchaseOrderData is the default schema for a purchase order"
    },
    "purchaseorderPurchaseOrderDataSalts": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "format": "byte"
        },
        "currency": {
          "type": "string",
          "format": "byte"
        },
        "amount": {
          "type": "string",
          "format": "byte"
        },
        "recipient": {
          "type": "string",
          "format": "byte"
        },
        "sender": {
          "type": "string",
          "format": "byte"
        },
        "comment": {
          "type": "string",
          "format": "byte"
        },
        "delivery_date": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "PurhcaseOrderDataSalts keeps track of the salts used for each PurchaseOrderData field."
    },
    "purchaseorderPurchaseOrderDocument": {
      "type": "object",
      "properties": {
        "core_document": {
          "$ref": "#/definitions/coredocumentCoreDocument"
        },
        "data": {
          "$ref": "#/definitions/purchaseorderPurchaseOrderData"
        },
        "salts": {
          "$ref": "#/definitions/purchaseorderPurchaseOrderDataSalts"
        }
      },
      "description": "PurchaseOrderDocument combines the salts, data \u0026 coredocument for a purchase order."
    },
    "purchaseorderPurchaseOrderProof": {
      "type": "object",
      "properties": {
        "document_identifier": {
          "type": "string",
          "format": "byte"
        },
        "field_proofs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/proofsProof"
          }
        }
      }
    },
    "purchaseorderReceivedPurchaseOrders": {
      "type": "object",
      "properties": {
        "purchaseorders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/purchaseorderPurchaseOrderDocument"
          }
        }
      }
    },
    "purchaseorderSendPurchaseOrderEnvelope": {
      "type": "object",
      "properties": {
        "recipients": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "title": "Centrifuge OS Entity of the recipient"
        },
        "document": {
          "$ref": "#/definitions/purchaseorderPurchaseOrderDocument"
        }
      }
    }
  }
}
