// Code generated by protoc-gen-go. DO NOT EDIT.
// source: errors/error.proto

package errorspb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Error contains details about the specific error
type Error struct {
	// unique error code for this error
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// error description
	// in case of multiple errors, represents generic error message
	// with specifics in the errors field
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// map of sub errors if there are multiple errors to be passed back
	// ex:
	// "document_identifier": "empty identifer",
	// "next_identifier": "inavlid next identifer",
	// "document_root": "invalid document root"
	Errors               map[string]string `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_error_7f5d935252347baa, []int{0}
}
func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (dst *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(dst, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Error) GetErrors() map[string]string {
	if m != nil {
		return m.Errors
	}
	return nil
}

func init() {
	proto.RegisterType((*Error)(nil), "errors.Error")
	proto.RegisterMapType((map[string]string)(nil), "errors.Error.ErrorsEntry")
}

func init() { proto.RegisterFile("errors/error.proto", fileDescriptor_error_7f5d935252347baa) }

var fileDescriptor_error_7f5d935252347baa = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0x2d, 0x2a, 0xca,
	0x2f, 0x2a, 0xd6, 0x07, 0x53, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x6c, 0x10, 0x31, 0xa5,
	0xc5, 0x8c, 0x5c, 0xac, 0xae, 0x20, 0xa6, 0x90, 0x10, 0x17, 0x4b, 0x72, 0x7e, 0x4a, 0xaa, 0x04,
	0xa3, 0x02, 0xa3, 0x06, 0x6b, 0x10, 0x98, 0x2d, 0x24, 0xc1, 0xc5, 0x9e, 0x9b, 0x5a, 0x5c, 0x9c,
	0x98, 0x9e, 0x2a, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0xe3, 0x0a, 0x19, 0x72, 0x41, 0x4d,
	0x90, 0x60, 0x56, 0x60, 0xd6, 0xe0, 0x36, 0x92, 0xd4, 0x83, 0x70, 0xf5, 0xc0, 0x86, 0x41, 0xc8,
	0x62, 0xd7, 0xbc, 0x92, 0xa2, 0xca, 0x20, 0xa8, 0x42, 0x29, 0x4b, 0x2e, 0x6e, 0x24, 0x61, 0x21,
	0x01, 0x2e, 0xe6, 0xec, 0xd4, 0x4a, 0xb0, 0x75, 0x9c, 0x41, 0x20, 0xa6, 0x90, 0x08, 0x17, 0x6b,
	0x59, 0x62, 0x4e, 0x29, 0xcc, 0x2e, 0x08, 0xc7, 0x8a, 0xc9, 0x82, 0xd1, 0x49, 0x85, 0x8b, 0x2b,
	0x39, 0x3f, 0x17, 0x6a, 0x85, 0x13, 0x17, 0xd8, 0x98, 0x00, 0x90, 0x3f, 0x02, 0x18, 0xa3, 0x38,
	0x20, 0xa2, 0x05, 0x49, 0x49, 0x6c, 0x60, 0xaf, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x57,
	0x03, 0x31, 0x1c, 0xf0, 0x00, 0x00, 0x00,
}
