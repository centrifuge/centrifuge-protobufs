// Code generated by protoc-gen-go. DO NOT EDIT.
// source: p2p/p2p.proto

package p2ppb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import coredocument "github.com/centrifuge/centrifuge-protobufs/gen/go/coredocument"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Header struct {
	NetworkIdentifier uint32 `protobuf:"varint,1,opt,name=network_identifier,json=networkIdentifier" json:"network_identifier,omitempty"`
	NodeVersion       string `protobuf:"bytes,2,opt,name=node_version,json=nodeVersion" json:"node_version,omitempty"`
	SenderId          []byte `protobuf:"bytes,3,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	// Signature of all fields of Header (except itself) + body
	Signature *coredocument.Signature `protobuf:"bytes,4,opt,name=signature" json:"signature,omitempty"`
	// Body message type
	Type                 string   `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2p_a3239c1ab19641eb, []int{0}
}
func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (dst *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(dst, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetNetworkIdentifier() uint32 {
	if m != nil {
		return m.NetworkIdentifier
	}
	return 0
}

func (m *Header) GetNodeVersion() string {
	if m != nil {
		return m.NodeVersion
	}
	return ""
}

func (m *Header) GetSenderId() []byte {
	if m != nil {
		return m.SenderId
	}
	return nil
}

func (m *Header) GetSignature() *coredocument.Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Header) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type Envelope struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Body                 []byte   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Envelope) Reset()         { *m = Envelope{} }
func (m *Envelope) String() string { return proto.CompactTextString(m) }
func (*Envelope) ProtoMessage()    {}
func (*Envelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2p_a3239c1ab19641eb, []int{1}
}
func (m *Envelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Envelope.Unmarshal(m, b)
}
func (m *Envelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Envelope.Marshal(b, m, deterministic)
}
func (dst *Envelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Envelope.Merge(dst, src)
}
func (m *Envelope) XXX_Size() int {
	return xxx_messageInfo_Envelope.Size(m)
}
func (m *Envelope) XXX_DiscardUnknown() {
	xxx_messageInfo_Envelope.DiscardUnknown(m)
}

var xxx_messageInfo_Envelope proto.InternalMessageInfo

func (m *Envelope) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Envelope) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type SignatureRequest struct {
	Document             *coredocument.CoreDocument `protobuf:"bytes,1,opt,name=document" json:"document,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SignatureRequest) Reset()         { *m = SignatureRequest{} }
func (m *SignatureRequest) String() string { return proto.CompactTextString(m) }
func (*SignatureRequest) ProtoMessage()    {}
func (*SignatureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2p_a3239c1ab19641eb, []int{2}
}
func (m *SignatureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignatureRequest.Unmarshal(m, b)
}
func (m *SignatureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignatureRequest.Marshal(b, m, deterministic)
}
func (dst *SignatureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignatureRequest.Merge(dst, src)
}
func (m *SignatureRequest) XXX_Size() int {
	return xxx_messageInfo_SignatureRequest.Size(m)
}
func (m *SignatureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignatureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignatureRequest proto.InternalMessageInfo

func (m *SignatureRequest) GetDocument() *coredocument.CoreDocument {
	if m != nil {
		return m.Document
	}
	return nil
}

type SignatureResponse struct {
	Signature            *coredocument.Signature `protobuf:"bytes,1,opt,name=signature" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SignatureResponse) Reset()         { *m = SignatureResponse{} }
func (m *SignatureResponse) String() string { return proto.CompactTextString(m) }
func (*SignatureResponse) ProtoMessage()    {}
func (*SignatureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2p_a3239c1ab19641eb, []int{3}
}
func (m *SignatureResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignatureResponse.Unmarshal(m, b)
}
func (m *SignatureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignatureResponse.Marshal(b, m, deterministic)
}
func (dst *SignatureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignatureResponse.Merge(dst, src)
}
func (m *SignatureResponse) XXX_Size() int {
	return xxx_messageInfo_SignatureResponse.Size(m)
}
func (m *SignatureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignatureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignatureResponse proto.InternalMessageInfo

func (m *SignatureResponse) GetSignature() *coredocument.Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type GetAnchoredDocumentRequest struct {
	DocumentIdentifier   []byte   `protobuf:"bytes,1,opt,name=document_identifier,json=documentIdentifier,proto3" json:"document_identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAnchoredDocumentRequest) Reset()         { *m = GetAnchoredDocumentRequest{} }
func (m *GetAnchoredDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*GetAnchoredDocumentRequest) ProtoMessage()    {}
func (*GetAnchoredDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2p_a3239c1ab19641eb, []int{4}
}
func (m *GetAnchoredDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAnchoredDocumentRequest.Unmarshal(m, b)
}
func (m *GetAnchoredDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAnchoredDocumentRequest.Marshal(b, m, deterministic)
}
func (dst *GetAnchoredDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAnchoredDocumentRequest.Merge(dst, src)
}
func (m *GetAnchoredDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_GetAnchoredDocumentRequest.Size(m)
}
func (m *GetAnchoredDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAnchoredDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAnchoredDocumentRequest proto.InternalMessageInfo

func (m *GetAnchoredDocumentRequest) GetDocumentIdentifier() []byte {
	if m != nil {
		return m.DocumentIdentifier
	}
	return nil
}

type GetAnchoredDocumentResponse struct {
	Document             *coredocument.CoreDocument `protobuf:"bytes,1,opt,name=document" json:"document,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GetAnchoredDocumentResponse) Reset()         { *m = GetAnchoredDocumentResponse{} }
func (m *GetAnchoredDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*GetAnchoredDocumentResponse) ProtoMessage()    {}
func (*GetAnchoredDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2p_a3239c1ab19641eb, []int{5}
}
func (m *GetAnchoredDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAnchoredDocumentResponse.Unmarshal(m, b)
}
func (m *GetAnchoredDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAnchoredDocumentResponse.Marshal(b, m, deterministic)
}
func (dst *GetAnchoredDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAnchoredDocumentResponse.Merge(dst, src)
}
func (m *GetAnchoredDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_GetAnchoredDocumentResponse.Size(m)
}
func (m *GetAnchoredDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAnchoredDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAnchoredDocumentResponse proto.InternalMessageInfo

func (m *GetAnchoredDocumentResponse) GetDocument() *coredocument.CoreDocument {
	if m != nil {
		return m.Document
	}
	return nil
}

type AnchorDocumentRequest struct {
	Document             *coredocument.CoreDocument `protobuf:"bytes,1,opt,name=document" json:"document,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *AnchorDocumentRequest) Reset()         { *m = AnchorDocumentRequest{} }
func (m *AnchorDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*AnchorDocumentRequest) ProtoMessage()    {}
func (*AnchorDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2p_a3239c1ab19641eb, []int{6}
}
func (m *AnchorDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnchorDocumentRequest.Unmarshal(m, b)
}
func (m *AnchorDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnchorDocumentRequest.Marshal(b, m, deterministic)
}
func (dst *AnchorDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnchorDocumentRequest.Merge(dst, src)
}
func (m *AnchorDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_AnchorDocumentRequest.Size(m)
}
func (m *AnchorDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnchorDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnchorDocumentRequest proto.InternalMessageInfo

func (m *AnchorDocumentRequest) GetDocument() *coredocument.CoreDocument {
	if m != nil {
		return m.Document
	}
	return nil
}

type AnchorDocumentResponse struct {
	Accepted             bool     `protobuf:"varint,1,opt,name=accepted" json:"accepted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnchorDocumentResponse) Reset()         { *m = AnchorDocumentResponse{} }
func (m *AnchorDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*AnchorDocumentResponse) ProtoMessage()    {}
func (*AnchorDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2p_a3239c1ab19641eb, []int{7}
}
func (m *AnchorDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnchorDocumentResponse.Unmarshal(m, b)
}
func (m *AnchorDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnchorDocumentResponse.Marshal(b, m, deterministic)
}
func (dst *AnchorDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnchorDocumentResponse.Merge(dst, src)
}
func (m *AnchorDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_AnchorDocumentResponse.Size(m)
}
func (m *AnchorDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnchorDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnchorDocumentResponse proto.InternalMessageInfo

func (m *AnchorDocumentResponse) GetAccepted() bool {
	if m != nil {
		return m.Accepted
	}
	return false
}

func init() {
	proto.RegisterType((*Header)(nil), "p2p.Header")
	proto.RegisterType((*Envelope)(nil), "p2p.Envelope")
	proto.RegisterType((*SignatureRequest)(nil), "p2p.SignatureRequest")
	proto.RegisterType((*SignatureResponse)(nil), "p2p.SignatureResponse")
	proto.RegisterType((*GetAnchoredDocumentRequest)(nil), "p2p.GetAnchoredDocumentRequest")
	proto.RegisterType((*GetAnchoredDocumentResponse)(nil), "p2p.GetAnchoredDocumentResponse")
	proto.RegisterType((*AnchorDocumentRequest)(nil), "p2p.AnchorDocumentRequest")
	proto.RegisterType((*AnchorDocumentResponse)(nil), "p2p.AnchorDocumentResponse")
}

func init() { proto.RegisterFile("p2p/p2p.proto", fileDescriptor_p2p_a3239c1ab19641eb) }

var fileDescriptor_p2p_a3239c1ab19641eb = []byte{
	// 389 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x4b, 0xaf, 0xd3, 0x30,
	0x10, 0x85, 0x65, 0xfa, 0x20, 0x9d, 0xa4, 0x12, 0x35, 0x02, 0xa2, 0x14, 0x89, 0x10, 0x36, 0xd9,
	0xd0, 0x4a, 0xe1, 0xb1, 0xa7, 0x05, 0x41, 0x2b, 0x21, 0x2a, 0x23, 0x58, 0xb0, 0xa9, 0xda, 0x78,
	0xa0, 0x11, 0xd4, 0x36, 0x8e, 0x5b, 0xd4, 0xbf, 0xc7, 0x2f, 0xbb, 0x8a, 0xf3, 0xe8, 0x43, 0x77,
	0x71, 0xd5, 0x9d, 0x3d, 0x67, 0x72, 0xe6, 0x3b, 0x19, 0x43, 0x5f, 0x25, 0x6a, 0xac, 0x12, 0x35,
	0x52, 0x5a, 0x1a, 0x49, 0x5b, 0x2a, 0x51, 0xc1, 0xb3, 0x54, 0x6a, 0xe4, 0x32, 0xdd, 0x6d, 0x51,
	0x98, 0xf1, 0xe9, 0xa5, 0xec, 0x8a, 0xfe, 0x13, 0xe8, 0x7e, 0xc2, 0x15, 0x47, 0x4d, 0x5f, 0x02,
	0x15, 0x68, 0xfe, 0x49, 0xfd, 0x7b, 0x99, 0x71, 0x14, 0x26, 0xfb, 0x99, 0xa1, 0xf6, 0x49, 0x48,
	0xe2, 0x3e, 0x1b, 0x54, 0xca, 0xac, 0x11, 0xe8, 0x73, 0xf0, 0x84, 0xe4, 0xb8, 0xdc, 0xa3, 0xce,
	0x33, 0x29, 0xfc, 0x7b, 0x21, 0x89, 0x7b, 0xcc, 0x2d, 0x6a, 0xdf, 0xcb, 0x12, 0x1d, 0x42, 0x2f,
	0x47, 0xc1, 0x51, 0x2f, 0x33, 0xee, 0xb7, 0x42, 0x12, 0x7b, 0xcc, 0x29, 0x0b, 0x33, 0x4e, 0xdf,
	0x40, 0x2f, 0xcf, 0x7e, 0x89, 0x95, 0xd9, 0x69, 0xf4, 0xdb, 0x21, 0x89, 0xdd, 0xe4, 0xc9, 0xe8,
	0x8c, 0xf0, 0x6b, 0x2d, 0xb3, 0x63, 0x27, 0xa5, 0xd0, 0x36, 0x07, 0x85, 0x7e, 0xc7, 0x8e, 0xb3,
	0xe7, 0x68, 0x0a, 0xce, 0x07, 0xb1, 0xc7, 0x3f, 0x52, 0x21, 0x7d, 0x01, 0xdd, 0x8d, 0xcd, 0x63,
	0xc9, 0xdd, 0xc4, 0x1d, 0x15, 0xbf, 0xa4, 0x8c, 0xc8, 0x2a, 0xa9, 0x30, 0x59, 0x4b, 0x7e, 0xb0,
	0xcc, 0x1e, 0xb3, 0xe7, 0x68, 0x0e, 0x0f, 0x8e, 0x03, 0xf1, 0xef, 0x0e, 0x73, 0x43, 0xdf, 0x82,
	0x53, 0xd3, 0x54, 0x76, 0xc1, 0x39, 0xe2, 0x54, 0x6a, 0x7c, 0x5f, 0x5d, 0x58, 0xd3, 0x1b, 0xcd,
	0x61, 0x70, 0xe2, 0x95, 0x2b, 0x29, 0x72, 0x3c, 0x0f, 0x4c, 0xee, 0x1a, 0x38, 0xfa, 0x0c, 0xc1,
	0x47, 0x34, 0xef, 0x44, 0xba, 0x29, 0x5a, 0x9b, 0x61, 0x15, 0xe1, 0x18, 0x1e, 0xd6, 0x9f, 0x5f,
	0x6e, 0xcd, 0x63, 0xb4, 0x96, 0x8e, 0x6b, 0x8b, 0xbe, 0xc1, 0xf0, 0x56, 0xbb, 0x0a, 0xf2, 0xda,
	0xc4, 0x5f, 0xe0, 0x51, 0xe9, 0x79, 0x09, 0x78, 0xad, 0xe1, 0x6b, 0x78, 0x7c, 0x69, 0x58, 0x21,
	0x06, 0xe0, 0xac, 0xd2, 0x14, 0x95, 0x41, 0x6e, 0x1d, 0x1d, 0xd6, 0xdc, 0x27, 0x4f, 0xe1, 0x7e,
	0x2a, 0xb7, 0xc5, 0xca, 0x27, 0xce, 0x22, 0x51, 0x8b, 0xe2, 0x8d, 0x2f, 0xc8, 0x8f, 0x8e, 0x4a,
	0x94, 0x5a, 0xaf, 0xbb, 0xf6, 0xcd, 0xbf, 0xba, 0x09, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x32, 0x78,
	0xf1, 0x2a, 0x03, 0x00, 0x00,
}
