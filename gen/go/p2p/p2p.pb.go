// Code generated by protoc-gen-go. DO NOT EDIT.
// source: p2p/p2p.proto

package p2ppb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import coredocument "github.com/centrifuge/centrifuge-protobufs/gen/go/coredocument"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CentrifugeHeader struct {
	NetworkIdentifier    uint32   `protobuf:"varint,1,opt,name=network_identifier,json=networkIdentifier,proto3" json:"network_identifier,omitempty"`
	CentNodeVersion      string   `protobuf:"bytes,2,opt,name=cent_node_version,json=centNodeVersion,proto3" json:"cent_node_version,omitempty"`
	SenderCentrifugeId   []byte   `protobuf:"bytes,3,opt,name=sender_centrifuge_id,json=senderCentrifugeId,proto3" json:"sender_centrifuge_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CentrifugeHeader) Reset()         { *m = CentrifugeHeader{} }
func (m *CentrifugeHeader) String() string { return proto.CompactTextString(m) }
func (*CentrifugeHeader) ProtoMessage()    {}
func (*CentrifugeHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2p_d2b3a9550f463e93, []int{0}
}
func (m *CentrifugeHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CentrifugeHeader.Unmarshal(m, b)
}
func (m *CentrifugeHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CentrifugeHeader.Marshal(b, m, deterministic)
}
func (dst *CentrifugeHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CentrifugeHeader.Merge(dst, src)
}
func (m *CentrifugeHeader) XXX_Size() int {
	return xxx_messageInfo_CentrifugeHeader.Size(m)
}
func (m *CentrifugeHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_CentrifugeHeader.DiscardUnknown(m)
}

var xxx_messageInfo_CentrifugeHeader proto.InternalMessageInfo

func (m *CentrifugeHeader) GetNetworkIdentifier() uint32 {
	if m != nil {
		return m.NetworkIdentifier
	}
	return 0
}

func (m *CentrifugeHeader) GetCentNodeVersion() string {
	if m != nil {
		return m.CentNodeVersion
	}
	return ""
}

func (m *CentrifugeHeader) GetSenderCentrifugeId() []byte {
	if m != nil {
		return m.SenderCentrifugeId
	}
	return nil
}

type SignatureRequest struct {
	Header               *CentrifugeHeader          `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Document             *coredocument.CoreDocument `protobuf:"bytes,2,opt,name=document,proto3" json:"document,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SignatureRequest) Reset()         { *m = SignatureRequest{} }
func (m *SignatureRequest) String() string { return proto.CompactTextString(m) }
func (*SignatureRequest) ProtoMessage()    {}
func (*SignatureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2p_d2b3a9550f463e93, []int{1}
}
func (m *SignatureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignatureRequest.Unmarshal(m, b)
}
func (m *SignatureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignatureRequest.Marshal(b, m, deterministic)
}
func (dst *SignatureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignatureRequest.Merge(dst, src)
}
func (m *SignatureRequest) XXX_Size() int {
	return xxx_messageInfo_SignatureRequest.Size(m)
}
func (m *SignatureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignatureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignatureRequest proto.InternalMessageInfo

func (m *SignatureRequest) GetHeader() *CentrifugeHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SignatureRequest) GetDocument() *coredocument.CoreDocument {
	if m != nil {
		return m.Document
	}
	return nil
}

type SignatureResponse struct {
	CentNodeVersion      string                  `protobuf:"bytes,1,opt,name=cent_node_version,json=centNodeVersion,proto3" json:"cent_node_version,omitempty"`
	Signature            *coredocument.Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SignatureResponse) Reset()         { *m = SignatureResponse{} }
func (m *SignatureResponse) String() string { return proto.CompactTextString(m) }
func (*SignatureResponse) ProtoMessage()    {}
func (*SignatureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2p_d2b3a9550f463e93, []int{2}
}
func (m *SignatureResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignatureResponse.Unmarshal(m, b)
}
func (m *SignatureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignatureResponse.Marshal(b, m, deterministic)
}
func (dst *SignatureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignatureResponse.Merge(dst, src)
}
func (m *SignatureResponse) XXX_Size() int {
	return xxx_messageInfo_SignatureResponse.Size(m)
}
func (m *SignatureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignatureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignatureResponse proto.InternalMessageInfo

func (m *SignatureResponse) GetCentNodeVersion() string {
	if m != nil {
		return m.CentNodeVersion
	}
	return ""
}

func (m *SignatureResponse) GetSignature() *coredocument.Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type AnchorDocumentRequest struct {
	Header               *CentrifugeHeader          `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Document             *coredocument.CoreDocument `protobuf:"bytes,2,opt,name=document,proto3" json:"document,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *AnchorDocumentRequest) Reset()         { *m = AnchorDocumentRequest{} }
func (m *AnchorDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*AnchorDocumentRequest) ProtoMessage()    {}
func (*AnchorDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2p_d2b3a9550f463e93, []int{3}
}
func (m *AnchorDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnchorDocumentRequest.Unmarshal(m, b)
}
func (m *AnchorDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnchorDocumentRequest.Marshal(b, m, deterministic)
}
func (dst *AnchorDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnchorDocumentRequest.Merge(dst, src)
}
func (m *AnchorDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_AnchorDocumentRequest.Size(m)
}
func (m *AnchorDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnchorDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnchorDocumentRequest proto.InternalMessageInfo

func (m *AnchorDocumentRequest) GetHeader() *CentrifugeHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AnchorDocumentRequest) GetDocument() *coredocument.CoreDocument {
	if m != nil {
		return m.Document
	}
	return nil
}

type AnchorDocumentResponse struct {
	CentNodeVersion      string   `protobuf:"bytes,1,opt,name=cent_node_version,json=centNodeVersion,proto3" json:"cent_node_version,omitempty"`
	Accepted             bool     `protobuf:"varint,2,opt,name=accepted,proto3" json:"accepted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnchorDocumentResponse) Reset()         { *m = AnchorDocumentResponse{} }
func (m *AnchorDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*AnchorDocumentResponse) ProtoMessage()    {}
func (*AnchorDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2p_d2b3a9550f463e93, []int{4}
}
func (m *AnchorDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnchorDocumentResponse.Unmarshal(m, b)
}
func (m *AnchorDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnchorDocumentResponse.Marshal(b, m, deterministic)
}
func (dst *AnchorDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnchorDocumentResponse.Merge(dst, src)
}
func (m *AnchorDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_AnchorDocumentResponse.Size(m)
}
func (m *AnchorDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnchorDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnchorDocumentResponse proto.InternalMessageInfo

func (m *AnchorDocumentResponse) GetCentNodeVersion() string {
	if m != nil {
		return m.CentNodeVersion
	}
	return ""
}

func (m *AnchorDocumentResponse) GetAccepted() bool {
	if m != nil {
		return m.Accepted
	}
	return false
}

func init() {
	proto.RegisterType((*CentrifugeHeader)(nil), "p2p.CentrifugeHeader")
	proto.RegisterType((*SignatureRequest)(nil), "p2p.SignatureRequest")
	proto.RegisterType((*SignatureResponse)(nil), "p2p.SignatureResponse")
	proto.RegisterType((*AnchorDocumentRequest)(nil), "p2p.AnchorDocumentRequest")
	proto.RegisterType((*AnchorDocumentResponse)(nil), "p2p.AnchorDocumentResponse")
}

func init() { proto.RegisterFile("p2p/p2p.proto", fileDescriptor_p2p_d2b3a9550f463e93) }

var fileDescriptor_p2p_d2b3a9550f463e93 = []byte{
	// 342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x92, 0x4f, 0x4f, 0x2a, 0x31,
	0x14, 0xc5, 0x33, 0x8f, 0x3c, 0xde, 0x70, 0x79, 0x44, 0x68, 0x44, 0x09, 0x31, 0x91, 0xcc, 0x8a,
	0x98, 0x00, 0xa6, 0x46, 0xf7, 0x82, 0x0b, 0xd9, 0x18, 0x52, 0x13, 0x17, 0x6e, 0x46, 0x68, 0x2f,
	0xd0, 0x18, 0xda, 0xda, 0xe9, 0x60, 0xdc, 0xf8, 0x55, 0xfc, 0xaa, 0x66, 0x86, 0x61, 0xf8, 0x13,
	0x56, 0x2e, 0x5c, 0xde, 0x9e, 0x93, 0x7b, 0xce, 0xaf, 0xb9, 0x50, 0x31, 0xd4, 0xf4, 0x0c, 0x35,
	0x5d, 0x63, 0xb5, 0xd3, 0xa4, 0x60, 0xa8, 0x69, 0x9e, 0x73, 0x6d, 0x51, 0x68, 0x1e, 0x2f, 0x50,
	0xb9, 0xde, 0xf6, 0xb0, 0x72, 0x05, 0x5f, 0x1e, 0x54, 0x07, 0xa8, 0x9c, 0x95, 0xd3, 0x78, 0x86,
	0xf7, 0x38, 0x16, 0x68, 0x49, 0x07, 0x88, 0x42, 0xf7, 0xae, 0xed, 0x6b, 0x28, 0x05, 0x2a, 0x27,
	0xa7, 0x12, 0x6d, 0xc3, 0x6b, 0x79, 0xed, 0x0a, 0xab, 0x65, 0xca, 0x30, 0x17, 0xc8, 0x05, 0xd4,
	0x38, 0x2a, 0x17, 0x2a, 0x2d, 0x30, 0x5c, 0xa2, 0x8d, 0xa4, 0x56, 0x8d, 0x3f, 0x2d, 0xaf, 0x5d,
	0x62, 0x47, 0x89, 0xf0, 0xa0, 0x05, 0x3e, 0xad, 0x9e, 0xc9, 0x25, 0x1c, 0x47, 0xa8, 0x04, 0xda,
	0x90, 0xe7, 0xa9, 0xa1, 0x14, 0x8d, 0x42, 0xcb, 0x6b, 0xff, 0x67, 0x64, 0xa5, 0x6d, 0x0a, 0x0d,
	0x45, 0xf0, 0x01, 0xd5, 0x47, 0x39, 0x53, 0x63, 0x17, 0x5b, 0x64, 0xf8, 0x16, 0x63, 0xe4, 0x48,
	0x07, 0x8a, 0xf3, 0xb4, 0x6a, 0x5a, 0xaa, 0x4c, 0xeb, 0xdd, 0x84, 0x7b, 0x9f, 0x83, 0x65, 0x26,
	0x72, 0x03, 0xfe, 0x1a, 0x3b, 0xed, 0x55, 0xa6, 0xcd, 0xee, 0xce, 0x5f, 0x0c, 0xb4, 0xc5, 0xbb,
	0x6c, 0x60, 0xb9, 0x37, 0x58, 0x42, 0x6d, 0x2b, 0x3a, 0x32, 0x5a, 0x45, 0x78, 0x98, 0xd6, 0x3b,
	0x4c, 0x7b, 0x0d, 0xa5, 0x68, 0xbd, 0x20, 0x4b, 0x3e, 0xdd, 0x4d, 0xde, 0xec, 0xdf, 0x38, 0x83,
	0x4f, 0xa8, 0xdf, 0x2a, 0x3e, 0xd7, 0x36, 0xef, 0xf4, 0xbb, 0xdc, 0x2f, 0x70, 0xb2, 0x9f, 0xff,
	0x03, 0xf8, 0x26, 0xf8, 0x63, 0xce, 0xd1, 0x38, 0x14, 0x69, 0xba, 0xcf, 0xf2, 0xb9, 0x7f, 0x06,
	0xff, 0xb8, 0x5e, 0x24, 0xed, 0xfb, 0xfe, 0x88, 0x9a, 0x51, 0x72, 0x8b, 0x23, 0xef, 0xf9, 0xaf,
	0xa1, 0xc6, 0x4c, 0x26, 0xc5, 0xf4, 0x36, 0xaf, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0xcc, 0x24,
	0x1b, 0x94, 0xd2, 0x02, 0x00, 0x00,
}
